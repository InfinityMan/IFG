/*
 * Copyright (C) 2016 Dmitry Tsvetkovsky
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ru.dmig.infinityflight.gui;

import javax.swing.JOptionPane;
import ru.dmig.infinityflight.logic.Updater;

/**
 *
 * @author Dmig
 */
public final class AdminGui extends javax.swing.JFrame {

    private static class GuiStarter extends Thread {

        public GuiStarter() {
            this.setName("AdminGui");
        }

        @Override
        public void run() {
            try {
                ru.epiclib.gui.Util.setStyle();
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
                System.exit(-11);
            }

            AdminGui gui = new AdminGui();
            gui.setVisible(true);
        }
    }

    public static void start() {
        GuiStarter starter = new GuiStarter();
        starter.start();
    }

    /**
     * Creates new form AdminGui
     */
    public AdminGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        halfSpeed = new javax.swing.JButton();
        doubleSpeed = new javax.swing.JButton();
        tickSize = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        halfSpeed.setFont(new java.awt.Font("Gulim", 0, 14)); // NOI18N
        halfSpeed.setText("speed / 2");
        halfSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halfSpeedActionPerformed(evt);
            }
        });

        doubleSpeed.setFont(new java.awt.Font("Gulim", 0, 14)); // NOI18N
        doubleSpeed.setText("speed * 2");
        doubleSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doubleSpeedActionPerformed(evt);
            }
        });

        tickSize.setEditable(false);
        tickSize.setFont(new java.awt.Font("Gulim", 0, 14)); // NOI18N
        tickSize.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tickSize.setText("1000 ms");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tickSize)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(halfSpeed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doubleSpeed)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tickSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(halfSpeed)
                    .addComponent(doubleSpeed))
                .addContainerGap(237, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doubleSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doubleSpeedActionPerformed
        Updater.changeTick(false);
        tickSize.setText(Math.round(Updater.getTick()) + " ms");
    }//GEN-LAST:event_doubleSpeedActionPerformed

    private void halfSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halfSpeedActionPerformed
        Updater.changeTick(true);
        tickSize.setText(Math.round(Updater.getTick()) + " ms");
    }//GEN-LAST:event_halfSpeedActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doubleSpeed;
    private javax.swing.JButton halfSpeed;
    private javax.swing.JTextField tickSize;
    // End of variables declaration//GEN-END:variables
}
